1) виды кеширования вывода
1. клиентское
2. серверное

2) послекешевая постановка
Кэширование части страницы: фрагментарное кэширование (используется для пользовательских элементов управления), 
послекэшевая постановка (не может быть использована для пользовательских элементов управления.
Послекэшевая постановка( Substitution ) Указывает раздел на кэшируемой веб-странице, который исключен из кэширования. 
В этом расположении осуществляется извлечение динамического содержимого, которое заменяется элементом управления Substitution.

В некоторых случаях обнаруживается, что кэшировать целую страницу невозможно, однако хотелось бы при этом кэшировать некоторую ее часть, 
которая не меняется, и которую дорого создавать заново. 
Решить эту задачу можно двумя способами:

Кэширование фрагментов. В этом случае идентифицируется только содержимое, которое необходимо кэшировать. 
Затем оно помещается в оболочку выделенного пользовательского элемента управления и кэшируется вывод только этого элемента.

Послекэшевая подстановка. В этом случае идентифицируется только динамическая часть содержимого, которую кэшировать нельзя. 
Затем это содержимое заменяется чем-то другим с использованием элемента управления Substitution.

Если кэшированию подлежит небольшая, отдельная часть содержимого страницы, то имеет смысл применить кэширование фрагментов. 
В противоположность этому, если имеется только небольшая часть динамического содержимого, то послекэшевая подстановка может подойти лучше. 

3) зависимости
1. от других кэшированных элементов; 
2. от файлов или папок; Если установить зависимость CacheDependency на папку, она будет отслеживать добавление, удаление и модификацию любого файла в этой папке. 
3. от запросов к базе данных. Предоставляют возможность автоматически делать недействительным кэшируемый объект данных (DataSet), когда связанные с ним данные модифицируются в базе.
(Агрегатные зависимости) Иногда нужно комбинировать зависимости, чтобы создать элемент, зависящий от более чем одного ресурса.

Пользовательская  зависимость кэша:
- с помощью таймера;
- с помощью отдельного потока;
- с помощью обработчика других событий.

4) профиль кеша
ASP.NET также позволяет применить одни и те же настройки кэширования к целой группе страниц с помощью средства, называемого профилями кэша. 
Профили кэша позволяют описывать настройки кэша в файле web.config, ассоциировать имя с этими настройками и затем 
применять их ко многим страницам сразу, указывая это имя. Таким образом, вы получаете свободу модифицировать все связанные страницы 
за один раз - просто изменяя соответствующий профиль кэша в файле web.config.

